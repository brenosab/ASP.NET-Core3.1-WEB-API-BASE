// <auto-generated />
using System;
using GestaoCompras.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace GestaoCompras.Api.Migrations.Compra
{
    [DbContext(typeof(CompraContext))]
    [Migration("20220104140815_UpdateContext")]
    partial class UpdateContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIorm.Entities.Compra", b =>
                {
                    b.Property<long>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLoja")
                        .HasColumnType("int");

                    b.Property<string>("ObservacaoCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<long>("UsuarioSolicitante")
                        .HasColumnType("bigint");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("IdCompra");

                    b.HasIndex("UsuarioSolicitante");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("APIorm.Entities.ItensCompra", b =>
                {
                    b.Property<long>("IdItemCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint");

                    b.Property<long>("IdProduto")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnit")
                        .HasColumnType("float");

                    b.HasKey("IdItemCompra");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItensCompra");
                });

            modelBuilder.Entity("APIorm.Entities.Produto", b =>
                {
                    b.Property<long>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("IdProduto");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            IdProduto = 1L,
                            Codigo = 1,
                            DataHoraCadastro = new DateTime(2022, 1, 4, 11, 8, 14, 846, DateTimeKind.Local).AddTicks(9875),
                            Descricao = "ALCOOL EM GEL 1L",
                            Valor = 8.1999999999999993
                        },
                        new
                        {
                            IdProduto = 2L,
                            Codigo = 22,
                            DataHoraCadastro = new DateTime(2022, 1, 4, 11, 8, 14, 848, DateTimeKind.Local).AddTicks(2203),
                            Descricao = "MÁSCARA",
                            Valor = 1.3999999999999999
                        });
                });

            modelBuilder.Entity("APIorm.Entities.Usuario", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SenhaLogin")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("APIorm.Entities.Compra", b =>
                {
                    b.HasOne("APIorm.Entities.Usuario", "Usuario")
                        .WithMany("Compra")
                        .HasForeignKey("UsuarioSolicitante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIorm.Entities.ItensCompra", b =>
                {
                    b.HasOne("APIorm.Entities.Compra", "Compra")
                        .WithMany("ItensCompra")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIorm.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
